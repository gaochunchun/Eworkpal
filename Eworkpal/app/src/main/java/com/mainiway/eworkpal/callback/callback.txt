
callback一共有以下 10 个回调,除onSuccess必须实现以外,其余均可以按需实现,每个方法参数详细说明:

convertSuccess():解析网络返回的数据回调
parseError():解析网络失败的数据回调
onBefore():网络请求真正执行前回调
onSuccess():网络请求成功的回调
onCacheSuccess():缓存读取成功的回调
onError():网络请求失败的回调
onCacheError():网络缓存读取失败的回调
onAfter():网络请求结束的回调,无论成功失败一定会执行
upProgress():上传进度的回调
downloadProgress():下载进度的回调



Callback回调具有如下顺序,虽然顺序写的很复杂,但是理解后,是很简单,并且合情合理的：

1).无缓存模式 CacheMode.NO_CACHE
网络请求成功 onBefore -> convertSuccess -> onSuccess -> onAfter
网络请求失败 onBefore -> parseError -> onError -> onAfter

2).默认缓存模式,遵循304头 CacheMode.DEFAULT
网络请求成功,服务端返回非304 onBefore -> convertSuccess -> onSuccess -> onAfter
网络请求成功服务端返回304 onBefore -> onCacheSuccess -> onAfter
网络请求失败 onBefore -> parseError -> onError -> onAfter

3).请求网络失败后读取缓存 CacheMode.REQUEST_FAILED_READ_CACHE
网络请求成功,不读取缓存 onBefore -> convertSuccess -> onSuccess -> onAfter
网络请求失败,读取缓存成功 onBefore -> parseError -> onError -> onCacheSuccess -> onAfter
网络请求失败,读取缓存失败 onBefore -> parseError -> onError -> onCacheError -> onAfter

4).如果缓存不存在才请求网络，否则使用缓存 CacheMode.IF_NONE_CACHE_REQUEST
已经有缓存,不请求网络 onBefore -> onCacheSuccess -> onAfter
没有缓存请求网络成功 onBefore -> onCacheError -> convertSuccess -> onSuccess -> onAfter
没有缓存请求网络失败 onBefore -> onCacheError -> parseError -> onError -> onAfter

5).先使用缓存，不管是否存在，仍然请求网络 CacheMode.FIRST_CACHE_THEN_REQUEST
无缓存时,网络请求成功 onBefore -> onCacheError -> convertSuccess -> onSuccess -> onAfter
无缓存时,网络请求失败 onBefore -> onCacheError -> parseError -> onError -> onAfter
有缓存时,网络请求成功 onBefore -> onCacheSuccess -> convertSuccess -> onSuccess -> onAfter
有缓存时,网络请求失败 onBefore -> onCacheSuccess -> parseError -> onError -> onAfter